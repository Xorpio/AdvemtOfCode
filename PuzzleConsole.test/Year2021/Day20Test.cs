using PuzzleConsole.Year2021.Day20;

namespace PuzzleConsole.test.Year2021;

[Trait("Year", "2021")]
[Trait("Day", "20")]
public partial class Day20Test {
    [Scenario]
    public void SolveTest(ScenarioContext scenario)
    {
        var sut = new Day20();

        scenario.Fact("Sut should not be null", () =>
        {
            sut.Should().NotBeNull();
        });

        scenario.Fact("Pixure should be enhanced", () =>
        {
            sut.lookup

            var puzzle = new string[]
            {
                "#..#.",
                "#....",
                "##..#",
                "..#..",
                "..###",

            };

            var Enhanced = sut.Enhance(puzzle, 0);

            var expected = new string[] {
                ".##.##.",
                "#..#.#.",
                "##.#..#",
                "####..#",
                ".#..##.",
                "..##..#",
                "...#.#.",

            };

            Enhanced.Should().BeEquivalentTo(expected);
        });

        scenario.Fact("Pixure should be second time", () =>
        {
            sut.lookup

            var puzzle = new string[]
            {
                ".##.##.",
                "#..#.#.",
                "##.#..#",
                "####..#",
                ".#..##.",
                "..##..#",
                "...#.#.",

            };

            var Enhanced = sut.Enhance(puzzle, 0);

            var expected = new string[] {
                ".......#.",
                ".#..#.#..",
                "#.#...###",
                "#...##.#.",
                "#.....#.#",
                ".#.#####.",
                "..#.#####",
                "...##.##.",
                "....###..",

            };

            Enhanced.Should().BeEquivalentTo(expected);
        });

        scenario.Fact("Puzzle solution should be: ", () =>
        {
            var puzzle = new string[]
            {

                "",
                "#..#.",
                "#....",
                "##..#",
                "..#..",
                "..###",

            };

            var solution = sut.Solve(puzzle);

            solution.First().Should().Be("35");
            solution.Last().Should().Be("3351");
        });
    }
}
